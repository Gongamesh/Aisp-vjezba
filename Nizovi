#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <time.h>
#include <stdlib.h>

void arrayFill(int *, int);
void sekvencialSearch(int*, int, int);
void selectSort(int*, int);
void switchPlaces(int*, int, int);
void binarySearch(int*, int, int);
void boubbleSort(int*, int);

int main(void) {
	int* array, *array2;
	int n, x;

	do {
		printf("Input size of array.\n");
		scanf("%d", &n);
	} while (n <= 0);

	array = (int*)calloc(n, sizeof(int));

	if (array == NULL) {
		perror("Error ");
		return -1;
	}

	array2 = (int*)calloc(n, sizeof(int));

	if (array2 == NULL) {
		perror("Error ");
		return -1;
	}

	arrayFill(array, n);

	for (int i = 0; i < n; i++) {
		printf("%d ", *(array + i));
	}

	for (int i = 0; i < n; i++) {
		*(array2 + i) = *(array + i);
	}

	printf("\n");

	printf("Input number u want to search.\n");
	scanf("%d", &x);

	sekvencialSearch(array, n, x);
	printf("\n");
	selectSort(array, n);
	printf("\n");
	binarySearch(array, n, x);
	printf("\n");
	boubbleSort(array2, n);

	free(array);
	array = NULL;
	free(array2);
	array2 = NULL;

	return 0;
}

void arrayFill(int* array, int sizeOfArray) {

	for (int i = 0; i < sizeOfArray; i++) {
		*(array + i) = rand() % 50;
	}

	return;
}

void sekvencialSearch(int* array, int sizeOfArray, int searchedNumber) {
	for (int i = 0; i < sizeOfArray; i++) {
		if (array[i] == searchedNumber) {
			printf("Yes, on %d. place in array.\n", i);
			return;
		}
	}
	printf("No.\n");
}

void selectSort(int* array, int sizeOfArray) {
	for (int i = 0; i < sizeOfArray - 1; i++) {
		for (int j = i + 1; j < sizeOfArray; j++) {
			if (*(array + i) > *(array + j)) {
				switchPlaces(array, i, j);
			}
		}
		printf("%d. step:\n", i);
		for (int z = 0; z < sizeOfArray; z++) {
			printf("%d ", *(array + z));
		}
		printf("\n");
	}
}

void switchPlaces(int* array, int x, int y) {
	int temp = *(array + x);
	*(array + x) = *(array + y);
	*(array + y) = temp;
}

void binarySearch(int* array, int sizeOfArray, int searchedNumber) {
	int ll = 0;
	int ul = sizeOfArray - 1;
	int flag = 0;

	while (flag == 0) {
		int m = (ll + ul) / 2;
		if (*(array + m) == searchedNumber) {
			printf("Yes, on %d. place.\n", m);
			flag = 1;
		}
		if (*(array + m) > searchedNumber) {
			ll = m + 1;
		}
		if (*(array + m) < searchedNumber) {
			ul = m - 1;
		}
		if (ll >= ul) {
			printf("No.\n");
			flag = 1;
		}
	}
}

void boubbleSort(int* array, int sizeOfArray) {
	for (int i = 0; i < sizeOfArray - 1; i++) {
		for (int j = 0; j < sizeOfArray - i - 1; j++) {
			if (*(array + j) > *(array + j + 1)) {
				switchPlaces(array, j, j+1);
			}
		}
		printf("%d. step:\n", i);
		for (int z = 0; z < sizeOfArray; z++) {
			printf("%d ", *(array + z));
		}
		printf("\n");
	}
}
